<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cardgarden.project.mapper.UserInfoMapper">

	<!-- 필요시: DTO와 칼럼명이 다른 경우 -->
	<resultMap id="UserInfoResultMap"
		type="userInfoDTO">
		<id property="user_id" column="user_id" />
		<result property="user_name" column="user_name" />
		<result property="user_password" column="user_password" />
		<result property="email" column="email" />
		<result property="nickname" column="nickname" />
		<result property="name" column="name" />
		<result property="gender" column="gender" />
		<result property="birth" column="birth" />
		<result property="phone" column="phone" />
		<result property="address" column="address" />
		<result property="created_at" column="created_at" />
		<result property="point" column="point" />
		<result property="is_admin" column="is_admin" />
	</resultMap>

	<!-- 전체 목록 -->
	<select id="selectAll" resultType="userInfoDTO">
		SELECT *
		FROM userinfo
	</select>

	<!-- user_id로 조회 -->
	<select id="selectById" parameterType="int" resultType="userInfoDTO">
		SELECT *
		FROM userinfo
		WHERE user_id = #{user_id}
	</select>

	<!-- email로 전체 조회 (이메일로 유저 한명 조회, 필요시) -->
	<select id="selectByEmail" parameterType="string" resultType="userInfoDTO">
		SELECT *
		FROM userinfo
		WHERE email = #{email}
	</select>

	<!-- 아이디 중복체크 -->
	<select id="countByLoginId" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM userinfo
		WHERE login_id = #{login_id}
	</select>

	<!-- 이메일 중복체크 -->
	<select id="countByEmail" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM userinfo
		WHERE email = #{email}
	</select>

	<!-- 닉네임 중복체크 -->
	<select id="countByNickname" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM userinfo
		WHERE nickname = #{nickname}
	</select>

	<!-- 신규 유저 등록 -->
	<insert id="insert" parameterType="userInfoDTO">
		INSERT INTO userinfo
		(user_id, user_name, user_password,
		email, nickname, name, gender, birth,
		phone, address, created_at,
		point, is_admin)
		VALUES
		(#{user_id}, #{user_name}, #{user_password},
		#{email}, #{nickname}, #{name},
		#{gender}, #{birth}, #{phone},
		#{address}, #{created_at}, #{point},
		#{is_admin})
	</insert>

	<!-- 정보 수정(패스워드, 닉네임 등) -->
	<update id="update" parameterType="userInfoDTO">
		UPDATE userinfo
		SET
		user_name = #{user_name},
		user_password = #{user_password},
		email = #{email},
		nickname = #{nickname},
		name = #{name},
		gender = #{gender},
		birth = #{birth},
		phone = #{phone},
		address = #{address},
		created_at = #{created_at},
		point = #{point},
		is_admin = #{is_admin}
		WHERE user_id = #{user_id}
	</update>

	<!-- 회원 탈퇴/삭제 -->
	<delete id="delete" parameterType="int">
		DELETE FROM userinfo
		WHERE
		user_id = #{user_id}
	</delete>

</mapper>
